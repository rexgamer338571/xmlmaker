<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AYFLNO0V0pdtAAAAAElFTkSuQmCC
</value>
  </data>
</root>